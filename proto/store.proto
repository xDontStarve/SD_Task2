syntax = "proto3";

package distributedstore;

service KeyValueStore {
  rpc put(PutRequest) returns (PutResponse);

  rpc get(GetRequest) returns (GetResponse);

  rpc slowDown(SlowDownRequest) returns (SlowDownResponse);

  rpc restore(RestoreRequest) returns (RestoreResponse);

  rpc prepare(PrepareRequest) returns (PrepareResponse);

  rpc commit(CommitRequest) returns (CommitResponse);

  rpc abort(AbortRequest) returns (AbortResponse);

  rpc registerNode(NodeInfo) returns (NodeRegisterResponse);

}

message PutRequest {
  string key = 1;
  string value = 2;
}

message PutResponse {
  bool success = 1;
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  string value = 1;
  bool found = 2;
}

message SlowDownRequest {
  int32 seconds = 1;
}

message SlowDownResponse {
  bool success = 1;
}

message RestoreRequest {}

message RestoreResponse {
  bool success = 1;
}

message Empty {
    
}

// Messages for 2PC operations
message PrepareRequest {
  string transactionId = 1;
  repeated KeyValueUpdate updates = 2;
}

message PrepareResponse {
  string transactionId = 1;
  bool voteCommit = 2; // true if the participant votes to commit
}

message CommitRequest {
  string transactionId = 1;
}

message CommitResponse {
  string transactionId = 1;
  bool success = 2;
}

message AbortRequest {
  string transactionId = 1;
}

message AbortResponse {
  string transactionId = 1;
  bool success = 2;
}

message KeyValueUpdate {
  string key = 1;
  string value = 2;
}

message NodeInfo {
  string node_id = 1;
  string ip = 2;
  int32 port = 3;
}

message NodeRegisterResponse {
  bool success = 1;
}